@{
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
}

<head>
    @*<link rel="stylesheet" type="text/css" href="~/Content/bootstrap-treeview.min.css">
        <script type="text/javascript" src="~/Scripts/bootstrap-treeview.js"></script>*@
    @*<link rel="stylesheet" type="text/css" href="~/Content/jquery.bootstrap.treeselect.css">
        <script type="text/javascript" src="~/Scripts/jquery.bootstrap.treeselect.js"></script>*@
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.treeSelector.css">
    <script type="text/javascript" src="~/Scripts/jquery.treeSelector.js"></script>

</head>

<br />

<div id="MainDiv" class="panel panel-default ">
    <div class="panel panel-default ">
        <div class="panel-heading">
            <h5 class="panel-title"><i class="icon-stack-plus position-left"></i>Create Knitting Order</h5>
        </div>
        <div class="panel-body">
            <form id="UserForm">
                <div class=" form-group">
                    <div class="form-group col-xs-4 form-inline">
                        <label for="Name" class="control-label" style="width:25%;">Name</label>
                        <div style=" display: inline;">
                            <input type="email" class="form-control" style="width:70%;" id="Name" required>
                        </div>
                    </div>
                    <div class="form-group col-xs-4 form-inline">
                        <label for="UserName" class="control-label" style="width:25%;">User Name</label>
                        <div style=" display: inline;">
                            <input type="email" class="form-control" style="width:70%;" id="UserName" required>
                        </div>
                    </div>
                    <div class="form-group col-xs-4 form-inline">
                        <label for="Password" class="control-label" style="width:25%;">Password</label>
                        <div style="display: inline;">
                            <input type="text" class="form-control" style="width:70%;" id="Password" required>
                        </div>
                    </div>
                </div>
                <div class=" form-group">
                    <div class="form-group col-xs-4 form-inline">
                        <div style="display: inline;">
                            <div id="Role" class="treeSelector" style="width:70%;display: inline-block;"></div>
                        </div>
                    </div>
                    <div class="form-group col-xs-4 form-inline">
                        <button class="btn btn-warning btn-sm" style="width:25%;" id="resetBtn">Reset</button>
                        <div style="display: inline;">
                            <input type="submit" value="Save" class="btn btn-success btn-sm" style="width:22%;" id="saveBtn">
                        </div>
                        <div style="display: inline;">
                            <input type="submit" value="Update" class="btn btn-primary btn-sm" disabled="disabled" style="width:23%;" id="updateBtn">
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <button class="btn btn-danger btn-sm" style="width:10%; margin-bottom:15px;" id="deleteBtn">Delete Row</button>
    <table id="UserTable" class="display nowrap stripe hover order-column " style="width: 1000px;">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>UserName</th>
                <th>Password</th>
                <th>Fabric</th>
                <th>Knitting</th>
                <th>Dyeing</th>
                <th>Slitting</th>
                <th>Stenter</th>
                <th>Aop Print</th>
                <th>Test Report</th>
                <th>Remarks</th>
                <th>Create Date</th>
            </tr>
        </thead>
    </table>
</div>

<script>

    $(document).ready(function () {

        debugger;
        var PermissionString = ""; var vals = [];

        var rootNode = [
            {
                "Id": "1",
                "value": 1,
                "val": 0,
                "title": "Knit",
                "children": [
                    {
                        "Id": "1_1",
                        "ParentID": 1,
                        "title": "Crud",
                        "value": 11,
                        "val": 0,
                        "children": []
                    },
                    {
                        "Id": "1_2",
                        "ParentID": 1,
                        "value": 12,
                        "val": 0,
                        "title": "LibrarySet",
                        "children": []
                    },
                    {
                        "Id": "1_3",
                        "ParentID": 1,
                        "value": 13,
                        "val": 0,
                        "title": "Approval",
                        "children": []
                    }
                ]
            }
        ];

        $('div.treeSelector').treeSelector(rootNode, [], function (e, values) {
            console.info('onChange', e, values);
        }, {
                checkWithParent: true,
                titleWithParent: false,
                notViewClickParentTitle: false,
                disabled: false,
                emptyOptonPlaceholder: 'no options'

            });

        $('div.treeSelector').treeSelector(rootNode, [], function (e, values) {
            debugger;
            vals = values;
        });

        var UserTable = $('#UserTable').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colvis'
            ],
            "ajax":
            {
                "url": "/UserManagement/GetData",
                "type": "GET",
                "dataType": "JSON"
            },
            "dom": 'Bfrtip',
            "scrollY": true,
            "scrollX": true,
            "Sorting": true,
            "searching": true,
            "select": {
                style: 'single'
            },
            "destroy": true,
            "columnDefs": [
                {
                    "targets": [0],
                    "searchable": false,
                    "orderable": false,
                }
            ],
            "columns": [
                {
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        return UserTable.data().count();
                    }
                },
                {
                    "visible": false,
                    "searchable": false,
                    "data": "Id"
                },
                { "data": "UserName" },
                { "data": "Password" },
                { "data": "Fabric" },
                { "data": "Knitting" },
                { "data": "Dyeing" },
                { "data": "Slitting" },
                { "data": "Stenter" },
                { "data": "Aop" },
                { "data": "Test" },
                { "data": "Remarks" },
                {
                    data: "CreateDate",
                    render: function (data, type, row) {
                        return moment(data).format("DD/MM/YYYY");
                    }
                }
            ]

        });

        function IsValid() {
            if ($('#Fabric').is(':checked')) {
                PermissionString = PermissionString + "1,";
            }
            if ($('#Knitting').is(':checked')) {
                PermissionString = PermissionString + "2,";
            }
            if ($('#Dyeing').is(':checked')) {
                PermissionString = PermissionString + "3,";
            }
            if ($('#Slitting').is(':checked')) {
                PermissionString = PermissionString + "4,";
            }
            if ($('#Stenter').is(':checked')) {
                PermissionString = PermissionString + "5,";
            }
            if ($('#Aop').is(':checked')) {
                PermissionString = PermissionString + "6,";
            }
            if ($('#Test').is(':checked')) {
                PermissionString = PermissionString + "7,";

            }
            if ($('#Remarks').is(':checked')) {
                PermissionString = PermissionString + "8,";
            }

            if (PermissionString != "") {
                PermissionString = PermissionString.replace(/,\s*$/, "");
                return true;
            }
            else {
                return false;
            }
        }

        function Reset() {
            event.preventDefault();
            debugger;
            $('#RoleGroup option:selected').val();

            $("#UserName").val("");
            $("#Password").val("");
            $("#Fabric").prop("checked", false);
            $("#Knitting").prop("checked", false);
            $("#Dyeing").prop("checked", false);
            $("#Slitting").prop("checked", false);
            $("#Stenter").prop("checked", false);
            $("#Aop").prop("checked", false);
            $("#Test").prop("checked", false);
            $("#Remarks").prop("checked", false);
            PermissionString = "";
            vals = [];
        }

        function findValueInArray(value, vals) {
            var result = false;
            for (var i = 0; i < vals.length; i++) {
                if (vals[i] == value) {
                    result = true;
                    break;
                }
            }
            return result;
        }

        $('#UserForm').submit(function (e) {
            debugger;
            event.preventDefault();

            rootNode.forEach(function (item, i) {
                item.children.forEach(function (a, j) {
                    if (findValueInArray(a["value"], vals) == true) {
                        a["val"] = 1;
                    }
                    else {
                        a["val"] = 0;
                    };
                });
            });

            var user = {
                Id: '0',
                UserName: $("#UserName").val(),
                Password: $("#Password").val(),
                rootNode: rootNode,
                PermissionString: PermissionString,
                CreateDate: moment(Date.now()).format("DD/MM/YYYY")
            };

            $.ajax({
                type: "POST",
                url: "/UserManagement/Create",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(user),
                success: function (response) {
                    debugger
                    if (response.data != "" && response.data != null) {
                        UserTable.row.add(response.data);
                        UserTable.draw();
                        Reset();
                    }
                    else {
                        alert("Failed to Save! Please Check Connection State!!!");
                        return;
                    }
                },
                failure: function () {
                    $("#tblItems").append(" Error when fetching data please contact administrator");
                }
            });

        });

        $("#deleteBtn").click(function () {
            event.preventDefault();
            if ($('#UserTable tbody tr').hasClass('selected')) {
                $.ajax({
                    type: "POST",
                    url: "/UserManagement/Delete",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: UserTable.rows('.selected').data()[0].Id,
                    success: function (response) {
                        if (response == "Success") {
                            UserTable.row('.selected').remove().draw(false);
                            alert("Delete Successfully!!!");
                            Reset();
                        }
                        else {
                            alert("Failed to Delete! Please Check Connection State!!!");
                            return;
                        }
                    },
                    failure: function () {
                        $("#tblItems").append(" Error when fetching data please contact administrator");
                    }
                });
            }
            else {
                alert("Please Select A Row!!!");
                return;
            }

        });

        $("#resetBtn").click(function () {
            event.preventDefault();
            debugger;
            Reset();

        });

        $('#UserTable tbody').on('click', 'tr', function () {

            $(this).toggleClass('selected');

            if ($(this).hasClass('selected')) {
                var rowdata = UserTable.row(this).data();
            }

            if (UserTable.data().any()) {
                Setvalue(rowdata);
                $('#saveBtn').prop("disabled", true);
                $('#updateBtn').prop("disabled", false);
            }
            else {
                $('#saveBtn').prop("disabled", false);
                $('#updateBtn').prop("disabled", true);
            }

        });

        function Setvalue(rowdata) {
            debugger;
            Reset();
            $("#UserName").val(rowdata.UserName);
            $("#Password").val(rowdata.Password);

            if (rowdata.Fabric == 1)
                $('#Fabric').prop('checked', true);
            if (rowdata.Knitting == 1)
                $('#Knitting').prop('checked', true);
            if (rowdata.Dyeing == 1)
                $('#Dyeing').prop('checked', true);
            if (rowdata.Slitting == 1)
                $('#Slitting').prop('checked', true);
            if (rowdata.Stenter == 1)
                $('#Stenter').prop('checked', true);
            if (rowdata.Aop == 1)
                $('#Aop').prop('checked', true);
            if (rowdata.Test == 1)
                $('#Test').prop('checked', true);
            if (rowdata.Remarks == 1)
                $('#Remarks').prop('checked', true);
        }

        $("#updateBtn").click(function () {
            event.preventDefault();

            debugger
            if ($('#UserTable tbody tr').hasClass('selected')) {
                debugger
                var Row = UserTable.rows('.selected').data()[0];
                var index = UserTable.row('.selected').index();

                if (IsValid() == true) {
                    var user = {
                        Id: Row.Id,
                        UserName: $("#UserName").val(),
                        Password: $("#Password").val(),
                        Fabric: $('#Fabric').is(':checked') ? 1 : 0,
                        Knitting: $('#Knitting').is(':checked') ? 1 : 0,
                        Dyeing: $('#Dyeing').is(':checked') ? 1 : 0,
                        Slitting: $('#Slitting').is(':checked') ? 1 : 0,
                        Stenter: $('#Stenter').is(':checked') ? 1 : 0,
                        Aop: $('#Aop').is(':checked') ? 1 : 0,
                        Test: $('#Test').is(':checked') ? 1 : 0,
                        Remarks: $('#Remarks').is(':checked') ? 1 : 0,
                        PermissionString: PermissionString,
                    };

                    $.ajax({
                        type: "POST",
                        url: "/UserManagement/Update",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify(user),
                        success: function (response) {
                            debugger
                            if (response.data != "" && response.data != null) {
                                debugger
                                UserTable.row(index).data(response.data).draw();
                                Reset();
                            }
                            else {
                                alert("Failed to Update!!!");
                                return;
                            }
                        },
                        failure: function () {
                            $("#tblItems").append(" Error when fetching data please contact administrator");
                        }
                    });
                }
                else {
                    alert("Select Atleast One Criteria!!!");
                    return;
                }
            }
            else {
                alert("Please Select A Row!!!");
                return;
            }

        });

    });


</script>